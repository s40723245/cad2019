var tipuesearch = {"pages": [{'title': 'Week', 'text': 'week2-5 \n week6-9 \n week10-14 \n week15-18 \n', 'tags': '', 'url': 'Week.html'}, {'title': 'Week2-5', 'text': 'week1 \n 中秋節放假 \n week2 \n 1.建立一個新的倉儲命名為cad2019 \n 2.下載2b \n 3.更改start裡編譯器的路徑到隨身碟的201906fall的data \n 4.把倉儲從遠端拉到近端進行更新 \n 5.git clone 個人倉儲網址.git \n 6.輸入git clone --recurse-submodules https://github.com/mdecourse/cmsimde.git cmsimde，載入cmsimde \n 7.進入cmsimde開啟倉儲 輸入python wsgi.py \n 8.如果flask沒更新，需輸入python -m pip install flask_cors，更新下載flask_cors \n 9.到up_dir複製檔案到cad2019目錄下 \n 10.改完名字上傳即可 \n 以下是我的操作教學影片 \n \n week3 \n 編譯步驟: \n 先將 Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe (透過 MSYS2 執行 shell 指令, 而非 portablegit 中的 sh.exe) \n git version 查驗 git 版本 \n git 2.13 版本以上, 可以使用下列 git clone \xa0 --recurse-submodules 取得所有子模組資料 \n git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace \n 上述指令同: \n git clone\xa0 https://github.com/solvespace/solvespace.git \xa0 \n cd solvespace \n git submodule init \n git submodule update \n edit Y:\\tmp\\solvespace\\extlib\\angle\\CMakeLists.txt comment out line 713 and 714 \n #list(APPEND ANGLE_DEFINITIONS #"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \\"d3dcompiler_47.dll\\", \\"d3dcompiler_46.dll\\", \\"d3dcompiler_43.dll\\" }") endif() \n 接著需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中 (即隨身系統的 msys64\\mingw64\\lib 目錄): \n cd solvespace \n cd extlib \n cd libpng \n mkdir build \n cd build \n cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n (mingw32-make -Wl,-static) \n rename libpng.dll.a to libpng_static.a and copy to Y:\\msys64\\mingw64\\lib \n 接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行: \n cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n 編譯完成後, 可以在 build\\bin 目錄中建立 solvespace.exe, 配合相關 dll 檔案後, 即可執行. \n week4 \n 自主練習 \n week5 \n solvespace操作 \n 1.打開solvespace \n 2.畫出一個正方體 \n 3.改顏色和透明度 \n 4.儲存成html檔 \n 5.把編譯過的text.html檔打開編譯 \n 6.打指令 \n 7.完成 \n 以下是我的操作影片 \n \n', 'tags': '', 'url': 'Week2-5.html'}, {'title': 'week6-9', 'text': 'week6 \n V-rep 網際 Python remote API ython remote API 雙輪車控制模擬 \n \n \n week7 \n 零件18 \n \n week8 \n ssh連線鑰匙 \n', 'tags': '', 'url': 'week6-9.html'}, {'title': 'week10-14', 'text': 'week11 \n Solidworks操作影片 \n \n \n week12 \n NX12第9章－製造 \n 9.1開始 在將每個CAD模型移入模型之前，需要執行一些準備步驟。 CAM環境。在本章中，我們將使用在以前的運動問題。在此模型中，所有單位均以毫米為單位，並且組件的製造。在開始之前，如果可以成為CAM高級角色。為此，請轉到角色資源欄上的菜單。單擊內容和列表將彈出可供CAM Advanced角色使用的選項 9.1.1創建空白 ➢在第4章中打開文件Die_cavity.prt以解決運動問題 ➢要創建坯料，請插入以下尺寸的塊 長度= 150毫米 寬度= 100毫米 高度= 80毫米 ➢對於“原點”選項，選擇基本塊的最低角，以便新創建的塊可以包裝整個以前的模型，該塊包含整個設計部分，因此我們需要更改該塊的顯示屬性以獲得更好的可視化效果。 ➢單擊視圖選項卡的可視化組中的編輯對象顯示圖標 ➢選擇剛創建的塊，然後單擊確定。 ➢彈出窗口時，更改顯示顏色並將透明度更改為50 ➢點擊確定 ➢右鍵單擊零件瀏覽器中的塊，然後隱藏剛剛創建的塊。 單擊“隱藏”（可能需要使用“從列表中選擇...”來選擇空白）。這將使原始塊將從工作環境中消失。 9.1.2設置加工環境 現在我們準備進入製造模塊。 ➢選擇文件→新建→製造→銑削車削 ➢有許多不同的定制CAM模板可用於不同的加工 操作。在這裡，我們僅對銑削操作感興趣。 9.1.3操作導航器 ➢單擊資源欄左側的“操作導航器”選項卡 操作導航器提供有關已創建程序和相應程序的信息 有關刀具，方法和策略的信息。程序列表可以用不同的方式查看 分類列表。在“操作導航器”中有四種查看程序列表的方法， 它們是“程序順序”視圖，“機床”視圖，“幾何”視圖和“加工方法”視圖。 ➢單擊幾何視圖 9.1.4機器坐標系（MCS） ➢單擊插入組中的創建幾何圖標 啟動編程設置 將看到“創建幾何體”彈出對話框。 ➢點擊確定 另一個彈出窗口將允許設置MCS 哪裡都行。默認情況下，NX 12採用原始 絕對CS作為MCS。 ➢單擊確定選擇默認選項作為MCS 9.1.5幾何定義 ➢單擊幾何視圖 ➢通過在操作導航器中單擊“ +”號來展開MCS_MAIN_SPINDLE ➢在操作導航器中雙擊WORKPIECE_MAIN。如果看不到 嘗試點擊相關的“ +”號 彈出窗口Workpiece Main 出現。可以在此處分配 零件幾何，毛坯幾何和 檢查幾何。 ➢單擊零件圖標 ➢選擇設計部分，然後單擊 ➢單擊空白圖標 ➢單擊塊，然後按確定 ➢單擊確定退出工件主窗口 \n 9.2創建操作 \n 9.2.1創建新操作 ➢單擊工具欄中的創建操作圖標 彈出創建操作窗口。 ➢確保操作類型為Mill_Contour ➢單擊左上方的Cavity_Mill圖標，如下所示： ➢選擇程序為1234 ➢將幾何更改為WORKPIECE_MAIN ➢點擊確定 通過序列。 9.2.2工具創建和選擇 ➢在型腔銑削彈出菜單中，單擊“工具”對話框中的“新建”按鈕。 ➢點擊新建 ➢在新工具窗口中，選擇銑削圖標 ➢輸入BUEM12X1作為名稱並單擊 ➢輸入如下圖所示的值 ➢點擊確定 9.2.3工具路徑設置 確保“工具軸”垂直於塊的頂面。 ➢單擊工具軸，然後選擇指定向量 ➢如圖所示選擇合適的軸 ➢在腔銑刀菜單中，單擊路徑 設置選項 9.2.4跨步和扇貝高度 選擇了“跨步”選項。這些選項包括“常量”、“扇貝”， 工具直徑等。例如，“常數”要求輸入下一行的距離值。 扇貝高度根據最大高度控制平行通道之間的距離 指定在通過之間保留的材料（扇貝）。這受刀具定義的影響 和曲面的曲率。扇貝允許系統確定跨步距離 根據輸入的扇貝高度。 ➢對於Stepover，選擇％Tool Flat，然後將Percent更改為70 9.2.5每次切割深度 ➢將每次切割的通用深度值更改為0.5 ➢點擊削減水平 ➢將範圍類型更改為用戶定義 ➢將範圍深度更改為80 ➢選擇確定 9.2.6切削參數 ➢在路徑設置菜單上，單擊切割 ➢在策略選項卡按鈕下，更改剪切 ➢單擊股票選項卡 ➢將零件側庫存的值更改為0.5 ➢點擊確定 9.2.7迴避 ➢單擊非切割動作 ➢單擊迴避標籤 該窗口由以下幾個避免點組成： 我們關注以下幾點： 從起點這是換刀命令的關鍵點進行。該值通常是50或100 Z = 0高度以上mm，以增強安全性 自動工具更換切刀時的工作 轉換器（ATC）。 ➢點擊起點 ➢在點選項字段中選擇指定 ➢在點對話框中，輸入坐標 XC，YC和ZC為（0、0、50） ➢點擊確定 這是程序開始和結束的地方。該值也比 Z = 0級別可增強安全性。這也是機器操作員檢查高度的地方 相對於作業的Z = 0級別安裝在主軸上的刀具。此交叉檢查 在機床中輸入的刀具補償。 ➢單擊起點 ➢選擇指定 ➢在點對話框中輸入坐標（0，0，50） ➢單擊確定退出點構造器 ➢單擊轉移/快速選項卡 ➢在間隙選項中選擇平面 ➢從類型選項卡的下拉菜單中選擇XC-YC平面 ➢在偏移和參考標籤下，輸入 值3作為距離 ➢單擊兩次“確定”返回到腔磨機 參數窗口 9.2.8速度和進給 ➢選擇進給和速度輸入進給和速度參數 ➢輸入主軸轉速值為4500 rpm 單個程序中涉及許多feed。 最重要的是切削飼料。進給時，工具將與原始工件並實際上切掉材料工件。 它是相對線速度刀具相對於作業移動的位置。 其他提要是可選的。一些機器控制系統使用其默認的回退和移動進給。在在這些情況下，即使沒有輸入其他提要，就不會有任何問題。一些控制系統可能會從程序。它可能比機器的略小最大進給速度。 ➢輸入Cut值為1200 mmpm ➢點擊確定 \n 9.3程序生成和驗證 \n 9.3.1生成程序 現在我們完成了輸入所需的所有參數 用於粗加工程序。現在是時候生成 程序。 ➢單擊工具欄底部的“生成”圖標。 窗口 現在可以觀察對模型進行切片的軟件 切入深度並在每個級別上創建刀具路徑。 可以在模型上找到青色，藍色，紅色和黃色 如圖所示。 9.3.2刀具路徑顯示 每當想查看刀具的整個刀具路徑時 程序，在“操作”中右鍵單擊該程序 導航器，然後單擊重播。它將顯示為可以觀察到“操作導航器”中該程序的旁邊是黃色的驚嘆號而不是紅色標記。這意味著程序已成功生成，但尚未生成 經過後期處理。如果模型有任何更改，程序將再次帶有紅色標記在它的旁邊。這意味著必須再次生成程序。但是，沒有必要更改程序中的任何參數。 9.3.3刀具路徑模擬 檢查創建的程序非常重要。這樣可以防止任何不當和 在切割路徑中進行危險動作。錯誤的參數和設置將給工件造成高昂的損壞。為避免此類錯誤，NX 12提供工具路徑驗證和鑿檢查。刀具路徑驗證可用於查看整個程序中的刀具運動。可以觀察工具的嚙合方式以及切割後的縮回方式。它還顯示了實際材料通過圖形模擬刪除。還可以通過以下方式查看特定的關注區域移動程序行。 ➢在Operation Navigator中右鍵單擊該程序，然後選擇Tool Path→V陶醉 或單擊工具欄中的“驗證工具路徑”按鈕 這將允許設置用於可視化工具路徑的參數。 ➢在工具路徑可視化窗口中，單擊 在播放圖標上查看動作 還可以在不同模式下查看可視化 通過更改旁邊的下拉菜單中的選項 顯示。 ➢單擊同一頁面上的3D動態選項卡 窗口 ➢單擊同一頁面上的“顯示選項”按鈕 窗口 ➢將動作數更改為50 ➢將動畫精度更改為精細 ➢將IPW顏色更改為綠色 ➢點擊確定 ➢再次單擊播放按鈕 模擬將如下圖所示 正確的。使用此選項，將能夠查看 實際的切削模擬和材料去除 通過計算機圖形學。它是3D動態的 可以在模擬時旋轉，平移和縮放模擬 正在玩。 9.3.4鑿檢查 切屑檢查用於驗證刀具是否從工件上去除了零件幾何形狀上多餘的材料。考慮到設計公差，任何製造過程 可能通過兩種方式生產有缺陷的零件。一種是去除多餘的材料，也稱為 更少的材料條件。另一種是留下應該清除的材料 是更多的物質條件。在大多數情況下，前者更危險，因為不可能 重新設計部分。後者更安全，因為可以通過返工去除殘留的材料 那個部分。鑿檢查選項檢查 前一種情況是多餘的材料清除 將被識別。 ➢右鍵單擊操作中的程序 航海家 ➢選擇工具路徑→鑿檢查 ➢點擊確定 鑿檢查完成後，刀具路徑 報告窗口將彈出。如果有的話 找到鑿子，就要糾正程序。 除此以外， ➢單擊確定或直接關閉彈出窗口 \n 9.4操作方法 \n 9.4.1粗加工 對於銑削操作，在完成作業之前，首先應進行粗銑削。 粗加工的主要目的是以更快的速度去除散裝物料，而不會影響 準確性和工作完成度。給予庫存津貼以為生產提供足夠的材料。 完成操作以獲得準確和良好的完成工作。我們在上一部分中所做的 本章正在生成粗加工程序。現在我們必須適度消除所有不平整 上一個程序剩餘的材料。 9.4.2半精加工 半精加工程序旨在消除由於粗加工引起的不均勻 並為精加工工序保留部分庫存津貼。一旦我們完成了第一個 粗加工程序中，半精加工總是更容易執行。 現在，我們將第一個程序複製並粘貼到Operation Navigator中。在新程序中 只需要更改一些參數和切削刀具尺寸，然後重新生成 程序。 ➢右鍵單擊CAVITY_MILL程序 操作導航器，然後單擊複製 ➢再次右鍵單擊CAVITY_MILL，然後 選擇粘貼 ➢右鍵單擊第二個 剛創建的CAVITY_MILL_COPY，然後單擊重命名 ➢將第二個程序重命名為CAVITY_MILL_1 會看到新創建的CAVITY_MILL_1旁邊有一個紅色標記，表示 該程序未生成。 現在讓我們設置第二個程序需要更改的參數。在開始之前，我們 應該分析零件的幾何形狀以找出刀具直徑的最小角半徑。 在我們的模型中為5毫米，在地板邊緣為1毫米。因此，刀具直徑可以是 小於10毫米的任何物體。為了獲得最佳的輸出和剛性，我們將選擇帶有 直徑10，下半徑1。 ➢在Operation Navigator上雙擊CAVITY_MILL_1以打開參數 窗口 就像在上一個程序中一樣，我們將創建一個新刀具。在工具標籤中，將看到 首先選擇的刀具。它將顯示BUEM12X1作為當前工具。 ➢創建一個新的工廠並命名為BUEM10X1 ➢直徑應小於10 半徑為1，長笛長度為38 ➢點擊確定 ➢單擊每次切割的公共深度為0.25英寸 路徑設置 ➢然後單擊切割參數按鈕 ➢單擊股票選項卡 ➢取消選中與使用地板相同旁邊的框 側 ➢輸入0.25作為零件庫存 ➢輸入0.1作為零件底盤存貨 ➢單擊遏制選項卡按鈕 ➢在“在製品中”旁邊的下拉菜單中，選擇“使用3D”。 In Process Workpiece是NX中非常有用的選項。該軟件考慮了先前的程序 並生成當前程序，例如在無材料區域沒有不必要的切削運動。這種策略大大減少了切割時間和空氣切割運動。的 該算法將強制切刀僅去除之前的材料 計劃並保持當前零件庫存限額。 ➢選擇確定以返回到參數窗口 ➢單擊提要和速度 ➢輸入主軸轉速5000 ➢然後點擊確定 半成品程序的參數和設置完成。 ➢通過單擊生成圖標重新生成程序 ➢軟件生成完成後，單擊確定。 然後重播“工具路徑可視化”。第二個程序中生成的整體刀具路徑 如下圖所示。可以重播它或以類似方式檢查氣刨。 9.4.3整理概況 到目前為止，我們已經完成了零件的粗加工和半精加工程序。有一個小 工件中剩餘的材料量，可在精加工程序中去除，以獲得 所需的精確零件幾何形狀。整理程序應生成為 零件的表面應正確加工。因此，最好創建多個 程序以獨特的方式加工具有相關切削參數和策略的表面集，而不是 而不是為所有曲面編寫一個程序。以下內容說明瞭如何對配置文件進行分組和 表面並創建塗飾程序。 9.4.3.1外部輪廓 該程序旨在將外斜牆修整到地板的底部。因為 該程序不應觸摸頂部的輪廓表面，我們將進行“檢查並修剪” 程序中的邊界。 ➢重複與之前相同的步驟，在操作上複製並粘貼CAVITY_MILL_1 航海家 ➢重命名程序CAVITY_MILL_2 ➢雙擊CAVITY_MILL_2進行參數更改 ➢在彈出的參數窗口中，將“剪切樣式”更改為“輪廓”，然後將“步進”更改為 佔40％ ➢單擊指定修剪邊界選項卡 修剪邊界窗口將彈出。確保 在右邊執行以下步驟 序列。保持Trim Side的默認設置為 內。這告訴軟件切刀不應 在邊界內的任何地方切割材料。修剪允許 可以指定邊界，以進一步限制每個切割級別的切割區域。 ➢將選擇方法更改為曲線 ➢將平面從自動更改為指定，然後單擊平面對話框 將會彈出一個新窗口。窗口將詢問選擇飛機的模式 曲線應投影。通常應該在零件的最高點 幾何。準確地說，它應該在MCS上。 ➢從類型下的下拉菜單中選擇XC-YC平面 ➢在距離旁邊輸入3 ➢點擊確定 現在我們將開始從零件中選擇邊。這些選定的邊將投影在Z = 3平面作為曲線並用作邊界。 ➢如圖所示，沿著輪廓表面選擇牆的所有頂部外邊緣。 確保連續選擇所有8條邊線 ➢選擇確定 ➢輸入每次切割的通用深度為0.2 ➢點擊切割參數 ➢在彈出對話框中，單擊“股票”選項卡 ➢輸入零件側面庫存和零件底面庫存值為0.00 Intol允許指定最大距離 切割器可能偏離預期的路徑進入 工件。 Outtol允許指定最大距離 刀具可能會偏離預期的路徑而遠離 工件。 ➢輸入Intol和Outtol值為0.001 如圖所示 ➢點擊確定 ➢單擊生成圖標以生成 主參數窗口中的程序 ➢當 程序生成完成 外部輪廓的精加工程序現已準備就緒。可以在重放工具時觀察 切刀永遠不會越過為修剪和檢查所給定邊界的路徑。切刀 縮回Z = 3平面以進行重定位。 9.4.3.2內部輪廓 ➢重複與之前相同的步驟，在操作上複製並粘貼CAVITY_MILL_2 導航器並將其重命名為CAVITY_MILL_3 ➢雙擊CAVITY_MILL_3以編輯參數或右鍵單擊它並選擇Edit ➢選擇“指定修剪邊界”選項卡，然後在彈出窗口中選擇“修剪邊在外部” 對話框 這樣可以防止切刀通過邊界。 ➢將選擇方法更改為曲線 ➢手動將平面更改為XC-YC平面，並將偏移距離輸入為3 ➢點擊確定 ➢如圖所示，選擇沿輪廓表面的所有頂部內邊緣。再次，使 確保所有8條邊都被選中以連續的順序（使用Shift +單擊以取消選擇曲線）。 ➢選擇確定返回參數窗口 ➢生成程序 ➢生成完成後，單擊確定。 內部輪廓的精加工程序現已準備就緒。通過重播工具路徑，可以 觀察到切刀永遠不會越過修剪和檢查所給定的邊界。 9.4.4修整輪廓表面 現在，我們將使用其他類型的策略來完成頂部自由曲面。 ➢單擊工具欄中的創建操作圖標 ➢單擊固定輪廓圖標為 如圖所示 ➢選擇1234作為程序 ➢選擇WORKPIECE_MAIN作為 幾何 ➢保留程序的默認名稱 ➢點擊確定 ➢在參數窗口的驅動方法下，確保已選擇邊界 ➢單擊圖標，這將彈出“邊界驅動方法”窗口，然後單擊 如圖所示，打開“邊界幾何”菜單 ➢將模式更改為曲線/邊線 ➢選擇材料面在外面 ➢選擇工具位置為開 工具位置確定工具在接近邊界時如何定位自身 會員。可以為邊界成員分配三個工具位置之一：“打開”，“ Tanto”或“接觸”。 •在“打開”位置，工具的中心點與沿工具軸的邊界對齊或 投影向量。 •在Tanto位置，工具的側面與邊界對齊。 •在“接觸”位置，工具接觸邊界。 ➢對於飛機，選擇“用戶定義” ➢再次將平面設置為XC-YC，距離為3 ➢點擊確定 ➢如圖所示，選擇頂部輪廓表面的外環。記得選擇 邊緣連續 ➢點擊確定 我們已在循環外部修剪了幾何圖形。現在我們必須修剪內部的幾何 內部循環，這樣剩下的唯一幾何圖形就是兩個循環之間的區域。 ➢選擇模式為曲線/邊線 ➢選擇材料面為內側，工具位置為開 ➢在XC-YC上選擇用戶定義的平面，距離為3 ➢如圖所示選擇輪廓表面的內邊緣 ➢單擊確定返回到邊界驅動方法窗口 ➢將Stepover方法更改為Scallop，輸入高度為0.001，然後單擊OK。 ➢點擊切割參數 ➢在庫存選項卡中更改容差值，以便 零件總和零件總和是0.001 ➢單擊更多選項卡按鈕並輸入值 最大步長為1.0 ➢點擊確定 在主要參數窗口中， ➢創建一個新工具並將其命名為BEM10 ➢將直徑更改為10毫米或更小 半徑為5毫米。 ➢點擊確定 ➢單擊工具欄上的Feeds and Speeds圖標。 參數窗口 ➢輸入主軸轉速，進給速度（切削）和 如圖所示計算其他 對 ➢點擊確定 ➢生成程序 輪廓表面現已完成，可以查看 通過刀具路徑驗證進行仿真。 9.4.5地板 地板是在地板上執行的整理操作 零件的水平平面（地板）。在大多數 銑削過程中，地板將是最終的 他們的運作。所有的水平面將 完成。這種平面操作使切刀在 每張臉都單次通過。 ➢單擊創建操作圖標 ➢在頂部將類型更改為mill_planar 窗戶的 ➢更改所有選項，如圖所示 ➢點擊確定 ➢在參數窗口中，更改剪切 跟隨模式 ➢更改以下刀具直徑的百分比 步入40 在地板操作中，最好始終保持 步進值小於直徑的一半 刀具以在平面上獲得更大的平整度 表面。 與以前的程序不同，我們必須選擇一個剪切區域。 ➢單擊“指定切割區域地板”，如圖所示 ➢選擇顯示在 下圖 如果無法選擇如圖所示的表面 轉到零件導航器並隱藏空白（選擇 空白，可以右鍵單擊空白，使用選擇 列表...），選擇曲面並再次取消隱藏毛坯。 ➢點擊確定 ➢在主參數窗口中單擊切割參數 ➢選擇庫存選項卡按鈕並輸入Intol和Outtol值為0.001 ➢點擊確定 ➢單擊提要和速度 在“參數”主窗口中， ➢創建一個新工具並將其命名為BEF105 ➢將直徑更改為10毫米或更小 半徑為5毫米 ➢點擊確定 因為這是地板操作，所以最好將主軸轉速高，進給速度低 到以前的操作。 ➢輸入主軸速度，進給速度的值 （剪切）併計算其他值，如 數字 ➢選擇確定 ➢生成程序。然後重播並驗證 切刀路徑 下圖顯示了地板的“刀具路徑”顯示。 9.5後期處理 製造應用程序的主要用途是生成製造的工具路徑 部分。通常，我們不能僅將未修改的刀具路徑文件發送到機器並開始切割 因為有許多不同類型的機器。每種機器都有獨特的硬件 功能，要求和控制系統。例如，機器可能具有垂直或垂直 臥式主軸它可以在同時移動多個軸的同時進行切割等。控制器接受 工具路徑文件，並指示工具運動和其他機器活動（例如轉動冷卻液或 空氣）。 自然，每種類型的機器都有獨特的硬件特性；控制器在以下方面也有所不同 軟件特性。例如，大多數控制器都要求將 冷卻液在特定代碼中給出。一些控制器還限制了M代碼的數量， 在一行輸出中被允許。此類信息不在最初的NX工具路徑中。 因此，必須修改刀具路徑以適合每種不同的獨特參數。 機器/控制器組合。修改過程稱為後處理。結果是 後處理的刀具路徑。 生成最終的後加工刀具路徑涉及兩個步驟。 1.創建刀具路徑數據文件，或稱為CLSF（刀具位置源文件）。 2.將CLSF後處理為機器CNC代碼（後處理文件）。該程序讀取 工具路徑數據並將其重新格式化以用於特定機器及其隨附工具 控制器。 9.5.1創建CLSF 生成並保存操作後，將生成的刀具路徑存儲為操作的一部分 在零件文件中。 CLSF（刀具位置源文件）提供了複製這些內部文件的方法 從零件文件中的操作到CLSF中的工具路徑（即文本文件）的路徑。的 GOTO值是當前刀具路徑的“快照”。導出的值引用自 操作中存儲的MCS。 CLS文件是某些後續程序的必需輸入， 例如後處理器。 ➢單擊以下程序之一 想在 操作導航器 ➢點擊輸出CLSF 操作工具欄 將會彈出一個窗口以選擇CLSF 格式。 ➢選擇CLSF_STANDARD並 輸入文件的位置 ➢選擇確定 將創建CLSF文件。會類似於圖 下面。文件內容包含刀具的基本代碼 運動，沒有任何有關機器代碼和控制的信息 系統。該文件可用於任何機器的後處理 控制。文件的擴展名是.cls。 已輸出到CLSF或後處理的任何程序的下一個綠色複選標記 在“操作導航器”中對其進行操作。 9.5.2後處理 ➢在操作導航器中單擊要發布的程序 ➢單擊菜單→工具→操作導航器→輸出→後處理或從 主頁選項卡，如圖所示 ➢選擇MILL_3_AXIS機器並 輸入文件的位置 ➢選擇確定 這將為目標計算機創建後處理文件。可以找到塊號 帶有與機器控制器類型有關的G和M代碼。文件的擴展名是.ptp。 最終輸出（filename.ptp）文件可以傳輸到用於進行實際銑削的機器 操作。從模型轉移到製造開始的整個過程 模塊將文件傳輸到機器，並將原始零件加工成最終零件 被稱為計算機輔助製造 \n Webots操作影片 \n 1.一開始先點start_webots.bat開啟webots \n 2.創立新世界並改名成my_first_simulation \n 3.再來設定一些東西(詳情如以下影片查看) \n 4.建立木箱並設定尺寸、位置 \n 5.新增一個E-puck robot(電子冰球機器人) \n 6.測試物理施力會對木箱或機器人有什麼反應 \n 7.導入程式碼讓機器人照著程式走 \n \n week13 \xa0  \n 我的reveal報告 \n \n', 'tags': '', 'url': 'week10-14.html'}, {'title': 'week15-18', 'text': '', 'tags': '', 'url': 'week15-18.html'}, {'title': 'Note', 'text': 'git submodule add  https://github.com/mdecourse/cmsimde.git cmsimde 第一次把cmsimde載入倉儲使用 python -m pip install flask_cors  要更新下載flask_cors git clone --recurse-submodules   https://github.com/solvespace/solvespace.git solvespace 從遠端copy cmsimde必須，綠字部分改cmsimde的網址 \n 使用學校網路需用proxy \n [http]  proxy = [2001:288:6004:17::7]:3128 \n', 'tags': '', 'url': 'Note.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.', 'tags': '', 'url': 'Develop.html'}]};